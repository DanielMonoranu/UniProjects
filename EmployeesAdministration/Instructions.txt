For database creation:

DATA SOURCE=localhost:1521/XE;PASSWORD=parola;USER ID=DANI

PT ORACLE SQL: 
SET LINESIZE 1500;

CREATE TABLE ANGAJATI("NR_CRT" INT PRIMARY KEY,
"NUME" VARCHAR(10),
"PRENUME" VARCHAR(10),
"FUNCTIE" VARCHAR(10),
"SALAR_BAZA" NUMBER,    
"SPOR_PROCENT" NUMBER,
"PREMII_BRUTE" NUMBER,
"TOTAL_BRUT" NUMBER,
"BRUT_IMPOZABIL" NUMBER,
"CAS" NUMBER,
"CASS" NUMBER,
"IMPOZIT" NUMBER,
"RETINERI" NUMBER,
"VIRAT_CARD" NUMBER  ); 

CREATE TABLE PROCENTE("ID" INT PRIMARY KEY, "CAS_PROCENT" NUMBER , "CASS_PROCENT" NUMBER, "IMPOZIT_PROCENT" NUMBER,"PAROLA"VARCHAR(10) );

INSERT INTO PROCENTE VALUES(0,0.25,0.1,0.1,'PAROLA');


CREATE OR REPLACE TRIGGER angajat_insert_trigger
BEFORE INSERT OR UPDATE ON ANGAJATI
//doar unele campuri
FOR EACH ROW
DECLARE
CAS_PROC NUMBER;
CASS_PROC NUMBER;
IMPOZIT_PROC NUMBER;
BEGIN
 IF INSERTING THEN
  SELECT angajat_insert_seq.nextval
  INTO :new."NR_CRT"
  FROM dual;
 END IF;
SELECT CAS_PROCENT INTO CAS_PROC FROM PROCENTE WHERE ID=0;
SELECT CASS_PROCENT INTO CASS_PROC FROM PROCENTE WHERE ID=0;
SELECT IMPOZIT_PROCENT INTO IMPOZIT_PROC FROM PROCENTE WHERE ID=0;

  :new.TOTAL_BRUT := :new.SALAR_BAZA *(1+:new.SPOR_PROCENT/100)+:new.PREMII_BRUTE;
  :new.CAS := :new.TOTAL_BRUT*CAS_PROC;
  :new.CASS := :new.TOTAL_BRUT*CASS_PROC;
  :new.BRUT_IMPOZABIL := :new.TOTAL_BRUT - :new.CAS-:new.CASS;
  :new.IMPOZIT := :new.BRUT_IMPOZABIL * IMPOZIT_PROC;
  :new.VIRAT_CARD := :new.TOTAL_BRUT - :new.IMPOZIT - :new.CAS - :new.CASS -:new.RETINERI;
END;
/


INSERT INTO ANGAJATI VALUES(0,'DANI','MONO','SEF',4000,10,0,1,1,1,1,1,0,1);
INSERT INTO ANGAJATI VALUES(0,'DOIUL','CEVA','SEF',4500,10,0,1,1,1,1,1,0,1);

UPDATE ANGAJATI  SET SALAR_BAZA=4500;


UPDATE PROCENTE SET IMPOZIT_PROCENT=20 WHERE ID =0;
UPDATE PROCENTE SET ID=0, CAS_PROCENT= 0.1, CASS_PROCENT= 0.2, IMPOZIT_PROCENT= 0.3, PAROLA= 'CEEE';
DROP TRIGGER procente_update_trigger;

CREATE OR REPLACE TRIGGER procente_update_trigger
AFTER UPDATE ON procente
BEGIN
  UPDATE angajati
  SET cas = (
    SELECT total_brut * cas_procent
    FROM procente
    WHERE id = 0
  ),
  cass = (
    SELECT total_brut * cass_procent 
    FROM procente
    WHERE id = 0
  ),
  impozit = (
    SELECT BRUT_IMPOZABIL*IMPOZIT_PROCENT
    FROM procente
    WHERE id = 0
  ),
 brut_impozabil = (
    SELECT TOTAL_BRUT-CAS-CASS
    FROM procente
    WHERE id = 0
  ),
 virat_card= (
    SELECT TOTAL_BRUT-CAS-CASS-IMPOZIT-RETINERI
    FROM procente
    WHERE id = 0
  ),
TOTAL_BRUT=SALAR_BAZA*(1+SPOR_PROCENT/100)+PREMII_BRUTE
  WHERE nr_crt IN (SELECT nr_crt FROM angajati);
END;
/


 CREATE OR REPLACE TRIGGER procente_update_trigger
  AFTER UPDATE OF CAS_PROCENT,CASS_PROCENT,IMPOZIT_PROCENT ON PROCENTE
  FOR EACH ROW
DECLARE
NEW_CASS_PROCENT NUMBER;
NEW_CAS_PROCENT NUMBER;
NEW_IMPOZIT_PROCENT NUMBER;
  BEGIN
NEW_CAS_PROCENT :=:new.CAS_PROCENT;
NEW_CASS_PROCENT :=:new.CASS_PROCENT;
NEW_IMPOZIT_PROCENT :=:new.IMPOZIT_PROCENT;
  UPDATE ANGAJATI SET TOTAL_BRUT= SALAR_BAZA *(1+SPOR_PROCENT/100)+PREMII_BRUTE;  
  UPDATE ANGAJATI SET CAS=TOTAL_BRUT*NEW_CAS_PROCENT ;
  UPDATE ANGAJATI SET CASS=TOTAL_BRUT*NEW_CASS_PROCENT ;
  UPDATE ANGAJATI SET BRUT_IMPOZABIL=TOTAL_BRUT-CASS-CAS ;
  UPDATE ANGAJATI SET IMPOZIT=BRUT_IMPOZABIL*NEW_IMPOZIT_PROCENT;
  UPDATE ANGAJATI SET VIRAT_CARD=TOTAL_BRUT-IMPOZIT-CAS-CASS-RETINERI;  
  END;
  /



